// Mocks generated by Mockito 5.4.6 from annotations
// in snapchef/test/viewmodels/user_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes, invalid_use_of_internal_member
import 'dart:async' as _i13;
import 'dart:io' as _i23;
import 'dart:ui' as _i19;

import 'package:drift/drift.dart' as _i11;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i12;
import 'package:flutter/material.dart' as _i21;
import 'package:flutter/services.dart' as _i20;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:snapchef/database/app_database.dart' as _i2;
import 'package:snapchef/database/daos/fridge_ingredient_dao.dart' as _i6;
import 'package:snapchef/database/daos/friend_dao.dart' as _i9;
import 'package:snapchef/database/daos/ingredient_dao.dart' as _i5;
import 'package:snapchef/database/daos/notification_dao.dart' as _i10;
import 'package:snapchef/database/daos/recipe_dao.dart' as _i7;
import 'package:snapchef/database/daos/shared_recipe_dao.dart' as _i8;
import 'package:snapchef/database/daos/user_dao.dart' as _i3;
import 'package:snapchef/database/daos/user_stats_dao.dart' as _i4;
import 'package:snapchef/models/friend_request.dart' as _i25;
import 'package:snapchef/models/user.dart' as _i15;
import 'package:snapchef/providers/connectivity_provider.dart' as _i18;
import 'package:snapchef/repositories/user_repository.dart' as _i22;
import 'package:snapchef/services/auth_service.dart' as _i16;
import 'package:snapchef/services/friend_service.dart' as _i24;
import 'package:snapchef/services/user_service.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _Fake$UsersTable_0 extends _i1.SmartFake implements _i2.$UsersTable {
  _Fake$UsersTable_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$UserStatsTable_1 extends _i1.SmartFake
    implements _i2.$UserStatsTable {
  _Fake$UserStatsTable_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$IngredientsTable_2 extends _i1.SmartFake
    implements _i2.$IngredientsTable {
  _Fake$IngredientsTable_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$FridgeIngredientsTable_3 extends _i1.SmartFake
    implements _i2.$FridgeIngredientsTable {
  _Fake$FridgeIngredientsTable_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$RecipesTable_4 extends _i1.SmartFake implements _i2.$RecipesTable {
  _Fake$RecipesTable_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$SharedRecipesTable_5 extends _i1.SmartFake
    implements _i2.$SharedRecipesTable {
  _Fake$SharedRecipesTable_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$FriendsTable_6 extends _i1.SmartFake implements _i2.$FriendsTable {
  _Fake$FriendsTable_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$NotificationsTable_7 extends _i1.SmartFake
    implements _i2.$NotificationsTable {
  _Fake$NotificationsTable_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDao_8 extends _i1.SmartFake implements _i3.UserDao {
  _FakeUserDao_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserStatsDao_9 extends _i1.SmartFake implements _i4.UserStatsDao {
  _FakeUserStatsDao_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIngredientDao_10 extends _i1.SmartFake implements _i5.IngredientDao {
  _FakeIngredientDao_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFridgeIngredientDao_11 extends _i1.SmartFake
    implements _i6.FridgeIngredientDao {
  _FakeFridgeIngredientDao_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRecipeDao_12 extends _i1.SmartFake implements _i7.RecipeDao {
  _FakeRecipeDao_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedRecipeDao_13 extends _i1.SmartFake
    implements _i8.SharedRecipeDao {
  _FakeSharedRecipeDao_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFriendDao_14 extends _i1.SmartFake implements _i9.FriendDao {
  _FakeFriendDao_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationDao_15 extends _i1.SmartFake
    implements _i10.NotificationDao {
  _FakeNotificationDao_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$AppDatabaseManager_16 extends _i1.SmartFake
    implements _i2.$AppDatabaseManager {
  _Fake$AppDatabaseManager_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_17 extends _i1.SmartFake
    implements _i11.GeneratedDatabase {
  _FakeGeneratedDatabase_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_18 extends _i1.SmartFake
    implements _i11.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrationStrategy_19 extends _i1.SmartFake
    implements _i11.MigrationStrategy {
  _FakeMigrationStrategy_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_20 extends _i1.SmartFake
    implements _i11.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_21 extends _i1.SmartFake
    implements _i11.DatabaseConnection {
  _FakeDatabaseConnection_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_22 extends _i1.SmartFake
    implements _i11.QueryExecutor {
  _FakeQueryExecutor_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_23 extends _i1.SmartFake
    implements _i12.StreamQueryStore {
  _FakeStreamQueryStore_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_24 extends _i1.SmartFake
    implements _i11.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_25 extends _i1.SmartFake implements _i11.Migrator {
  _FakeMigrator_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_26<T1> extends _i1.SmartFake implements _i13.Future<T1> {
  _FakeFuture_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_27<T1 extends _i11.Table, D1> extends _i1.SmartFake
    implements _i11.InsertStatement<T1, D1> {
  _FakeInsertStatement_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_28<T extends _i11.Table, D> extends _i1.SmartFake
    implements _i11.UpdateStatement<T, D> {
  _FakeUpdateStatement_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_29<T1 extends _i11.HasResultSet, D>
    extends _i1.SmartFake implements _i11.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_30<FirstT extends _i11.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i11.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseSelectStatement_31<Row> extends _i1.SmartFake
    implements _i11.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_32<T1 extends _i11.Table, D1> extends _i1.SmartFake
    implements _i11.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_33<T> extends _i1.SmartFake
    implements _i11.Selectable<T> {
  _FakeSelectable_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_34 extends _i1.SmartFake
    implements _i11.GenerationContext {
  _FakeGenerationContext_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppDatabase_35 extends _i1.SmartFake implements _i2.AppDatabase {
  _FakeAppDatabase_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserService_36 extends _i1.SmartFake implements _i14.UserService {
  _FakeUserService_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_37 extends _i1.SmartFake implements _i15.User {
  _FakeUser_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i16.AuthService {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i17.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i13.Future<Map<String, dynamic>> googleSignIn(String? idToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #googleSignIn,
          [idToken],
        ),
        returnValue:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<Map<String, dynamic>> signup(
    String? firstName,
    String? lastName,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            firstName,
            lastName,
            email,
            password,
          ],
        ),
        returnValue:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> refreshTokens() => (super.noSuchMethod(
        Invocation.method(
          #refreshTokens,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> verifyOTP(
    String? email,
    String? otp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [
            email,
            otp,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> resendOTP(String? email) => (super.noSuchMethod(
        Invocation.method(
          #resendOTP,
          [email],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> requestPasswordReset(String? email) => (super.noSuchMethod(
        Invocation.method(
          #requestPasswordReset,
          [email],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> confirmPasswordReset(
    String? email,
    String? otp,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [
            email,
            otp,
            newPassword,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i2.AppDatabase {
  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  _i2.$UsersTable get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _Fake$UsersTable_0(
          this,
          Invocation.getter(#users),
        ),
        returnValueForMissingStub: _Fake$UsersTable_0(
          this,
          Invocation.getter(#users),
        ),
      ) as _i2.$UsersTable);

  @override
  _i2.$UserStatsTable get userStats => (super.noSuchMethod(
        Invocation.getter(#userStats),
        returnValue: _Fake$UserStatsTable_1(
          this,
          Invocation.getter(#userStats),
        ),
        returnValueForMissingStub: _Fake$UserStatsTable_1(
          this,
          Invocation.getter(#userStats),
        ),
      ) as _i2.$UserStatsTable);

  @override
  _i2.$IngredientsTable get ingredients => (super.noSuchMethod(
        Invocation.getter(#ingredients),
        returnValue: _Fake$IngredientsTable_2(
          this,
          Invocation.getter(#ingredients),
        ),
        returnValueForMissingStub: _Fake$IngredientsTable_2(
          this,
          Invocation.getter(#ingredients),
        ),
      ) as _i2.$IngredientsTable);

  @override
  _i2.$FridgeIngredientsTable get fridgeIngredients => (super.noSuchMethod(
        Invocation.getter(#fridgeIngredients),
        returnValue: _Fake$FridgeIngredientsTable_3(
          this,
          Invocation.getter(#fridgeIngredients),
        ),
        returnValueForMissingStub: _Fake$FridgeIngredientsTable_3(
          this,
          Invocation.getter(#fridgeIngredients),
        ),
      ) as _i2.$FridgeIngredientsTable);

  @override
  _i2.$RecipesTable get recipes => (super.noSuchMethod(
        Invocation.getter(#recipes),
        returnValue: _Fake$RecipesTable_4(
          this,
          Invocation.getter(#recipes),
        ),
        returnValueForMissingStub: _Fake$RecipesTable_4(
          this,
          Invocation.getter(#recipes),
        ),
      ) as _i2.$RecipesTable);

  @override
  _i2.$SharedRecipesTable get sharedRecipes => (super.noSuchMethod(
        Invocation.getter(#sharedRecipes),
        returnValue: _Fake$SharedRecipesTable_5(
          this,
          Invocation.getter(#sharedRecipes),
        ),
        returnValueForMissingStub: _Fake$SharedRecipesTable_5(
          this,
          Invocation.getter(#sharedRecipes),
        ),
      ) as _i2.$SharedRecipesTable);

  @override
  _i2.$FriendsTable get friends => (super.noSuchMethod(
        Invocation.getter(#friends),
        returnValue: _Fake$FriendsTable_6(
          this,
          Invocation.getter(#friends),
        ),
        returnValueForMissingStub: _Fake$FriendsTable_6(
          this,
          Invocation.getter(#friends),
        ),
      ) as _i2.$FriendsTable);

  @override
  _i2.$NotificationsTable get notifications => (super.noSuchMethod(
        Invocation.getter(#notifications),
        returnValue: _Fake$NotificationsTable_7(
          this,
          Invocation.getter(#notifications),
        ),
        returnValueForMissingStub: _Fake$NotificationsTable_7(
          this,
          Invocation.getter(#notifications),
        ),
      ) as _i2.$NotificationsTable);

  @override
  _i3.UserDao get userDao => (super.noSuchMethod(
        Invocation.getter(#userDao),
        returnValue: _FakeUserDao_8(
          this,
          Invocation.getter(#userDao),
        ),
        returnValueForMissingStub: _FakeUserDao_8(
          this,
          Invocation.getter(#userDao),
        ),
      ) as _i3.UserDao);

  @override
  _i4.UserStatsDao get userStatsDao => (super.noSuchMethod(
        Invocation.getter(#userStatsDao),
        returnValue: _FakeUserStatsDao_9(
          this,
          Invocation.getter(#userStatsDao),
        ),
        returnValueForMissingStub: _FakeUserStatsDao_9(
          this,
          Invocation.getter(#userStatsDao),
        ),
      ) as _i4.UserStatsDao);

  @override
  _i5.IngredientDao get ingredientDao => (super.noSuchMethod(
        Invocation.getter(#ingredientDao),
        returnValue: _FakeIngredientDao_10(
          this,
          Invocation.getter(#ingredientDao),
        ),
        returnValueForMissingStub: _FakeIngredientDao_10(
          this,
          Invocation.getter(#ingredientDao),
        ),
      ) as _i5.IngredientDao);

  @override
  _i6.FridgeIngredientDao get fridgeIngredientDao => (super.noSuchMethod(
        Invocation.getter(#fridgeIngredientDao),
        returnValue: _FakeFridgeIngredientDao_11(
          this,
          Invocation.getter(#fridgeIngredientDao),
        ),
        returnValueForMissingStub: _FakeFridgeIngredientDao_11(
          this,
          Invocation.getter(#fridgeIngredientDao),
        ),
      ) as _i6.FridgeIngredientDao);

  @override
  _i7.RecipeDao get recipeDao => (super.noSuchMethod(
        Invocation.getter(#recipeDao),
        returnValue: _FakeRecipeDao_12(
          this,
          Invocation.getter(#recipeDao),
        ),
        returnValueForMissingStub: _FakeRecipeDao_12(
          this,
          Invocation.getter(#recipeDao),
        ),
      ) as _i7.RecipeDao);

  @override
  _i8.SharedRecipeDao get sharedRecipeDao => (super.noSuchMethod(
        Invocation.getter(#sharedRecipeDao),
        returnValue: _FakeSharedRecipeDao_13(
          this,
          Invocation.getter(#sharedRecipeDao),
        ),
        returnValueForMissingStub: _FakeSharedRecipeDao_13(
          this,
          Invocation.getter(#sharedRecipeDao),
        ),
      ) as _i8.SharedRecipeDao);

  @override
  _i9.FriendDao get friendDao => (super.noSuchMethod(
        Invocation.getter(#friendDao),
        returnValue: _FakeFriendDao_14(
          this,
          Invocation.getter(#friendDao),
        ),
        returnValueForMissingStub: _FakeFriendDao_14(
          this,
          Invocation.getter(#friendDao),
        ),
      ) as _i9.FriendDao);

  @override
  _i10.NotificationDao get notificationDao => (super.noSuchMethod(
        Invocation.getter(#notificationDao),
        returnValue: _FakeNotificationDao_15(
          this,
          Invocation.getter(#notificationDao),
        ),
        returnValueForMissingStub: _FakeNotificationDao_15(
          this,
          Invocation.getter(#notificationDao),
        ),
      ) as _i10.NotificationDao);

  @override
  _i2.$AppDatabaseManager get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: _Fake$AppDatabaseManager_16(
          this,
          Invocation.getter(#managers),
        ),
        returnValueForMissingStub: _Fake$AppDatabaseManager_16(
          this,
          Invocation.getter(#managers),
        ),
      ) as _i2.$AppDatabaseManager);

  @override
  Iterable<_i11.TableInfo<_i11.Table, Object?>> get allTables =>
      (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i11.TableInfo<_i11.Table, Object?>>[],
        returnValueForMissingStub: <_i11.TableInfo<_i11.Table, Object?>>[],
      ) as Iterable<_i11.TableInfo<_i11.Table, Object?>>);

  @override
  List<_i11.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i11.DatabaseSchemaEntity>[],
        returnValueForMissingStub: <_i11.DatabaseSchemaEntity>[],
      ) as List<_i11.DatabaseSchemaEntity>);

  @override
  _i11.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_17(
          this,
          Invocation.getter(#attachedDatabase),
        ),
        returnValueForMissingStub: _FakeGeneratedDatabase_17(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i11.GeneratedDatabase);

  @override
  _i11.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_18(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeDriftDatabaseOptions_18(
          this,
          Invocation.getter(#options),
        ),
      ) as _i11.DriftDatabaseOptions);

  @override
  _i11.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_19(
          this,
          Invocation.getter(#migration),
        ),
        returnValueForMissingStub: _FakeMigrationStrategy_19(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i11.MigrationStrategy);

  @override
  _i11.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_20(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
        returnValueForMissingStub: _FakeStreamQueryUpdateRules_20(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i11.StreamQueryUpdateRules);

  @override
  _i11.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_21(
          this,
          Invocation.getter(#connection),
        ),
        returnValueForMissingStub: _FakeDatabaseConnection_21(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i11.DatabaseConnection);

  @override
  _i11.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i17.dummyValue<_i11.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
        returnValueForMissingStub: _i17.dummyValue<_i11.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i11.SqlTypes);

  @override
  _i11.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_22(
          this,
          Invocation.getter(#executor),
        ),
        returnValueForMissingStub: _FakeQueryExecutor_22(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i11.QueryExecutor);

  @override
  _i12.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_23(
          this,
          Invocation.getter(#streamQueries),
        ),
        returnValueForMissingStub: _FakeStreamQueryStore_23(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i12.StreamQueryStore);

  @override
  _i11.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_24(
          this,
          Invocation.getter(#resolvedEngine),
        ),
        returnValueForMissingStub: _FakeDatabaseConnectionUser_24(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i11.DatabaseConnectionUser);

  @override
  _i13.Future<void> clearAllTables() => (super.noSuchMethod(
        Invocation.method(
          #clearAllTables,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i11.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_25(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeMigrator_25(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i11.Migrator);

  @override
  _i13.Future<void> beforeOpen(
    _i11.QueryExecutor? executor,
    _i11.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Stream<T> createStream<T extends Object>(
          _i12.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i13.Stream<T>.empty(),
        returnValueForMissingStub: _i13.Stream<T>.empty(),
      ) as _i13.Stream<T>);

  @override
  T alias<T, D>(
    _i11.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i17.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
        returnValueForMissingStub: _i17.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(
          Iterable<_i11.TableInfo<_i11.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i11.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Stream<Set<_i11.TableUpdate>> tableUpdates(
          [_i11.TableUpdateQuery? query = const _i11.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i13.Stream<Set<_i11.TableUpdate>>.empty(),
        returnValueForMissingStub: _i13.Stream<Set<_i11.TableUpdate>>.empty(),
      ) as _i13.Stream<Set<_i11.TableUpdate>>);

  @override
  _i13.Future<T> doWhenOpened<T>(
          _i13.FutureOr<T> Function(_i11.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i11.InsertStatement<T, D> into<T extends _i11.Table, D>(
          _i11.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_27<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeInsertStatement_27<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i11.InsertStatement<T, D>);

  @override
  _i11.UpdateStatement<Tbl, R> update<Tbl extends _i11.Table, R>(
          _i11.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_28<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeUpdateStatement_28<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i11.UpdateStatement<Tbl, R>);

  @override
  _i11.SimpleSelectStatement<T, R> select<T extends _i11.HasResultSet, R>(
    _i11.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_29<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeSimpleSelectStatement_29<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i11.SimpleSelectStatement<T, R>);

  @override
  _i11.JoinedSelectStatement<T, R> selectOnly<T extends _i11.HasResultSet, R>(
    _i11.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_30<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeJoinedSelectStatement_30<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i11.JoinedSelectStatement<T, R>);

  @override
  _i11.BaseSelectStatement<_i11.TypedResult> selectExpressions(
          Iterable<_i11.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_31<_i11.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
        returnValueForMissingStub:
            _FakeBaseSelectStatement_31<_i11.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i11.BaseSelectStatement<_i11.TypedResult>);

  @override
  _i11.DeleteStatement<T, D> delete<T extends _i11.Table, D>(
          _i11.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_32<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeDeleteStatement_32<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i11.DeleteStatement<T, D>);

  @override
  _i13.Future<int> customUpdate(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i11.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<int> customInsert(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<List<_i11.QueryRow>> customWriteReturning(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i11.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i13.Future<List<_i11.QueryRow>>.value(<_i11.QueryRow>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i11.QueryRow>>.value(<_i11.QueryRow>[]),
      ) as _i13.Future<List<_i11.QueryRow>>);

  @override
  _i11.Selectable<_i11.QueryRow> customSelect(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i11.Selectable<_i11.QueryRow>);

  @override
  _i11.Selectable<_i11.QueryRow> customSelectQuery(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i11.Selectable<_i11.QueryRow>);

  @override
  _i13.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<T> transaction<T>(
    _i13.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i13.Future<T> exclusively<T>(_i13.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i13.Future<void> batch(
          _i13.FutureOr<void> Function(_i11.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<T> runWithInterceptor<T>(
    _i13.Future<T> Function()? action, {
    required _i11.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i11.GenerationContext $write(
    _i11.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i11.GenerationContext);

  @override
  _i11.GenerationContext $writeInsertable(
    _i11.TableInfo<_i11.Table, dynamic>? table,
    _i11.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i11.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
        returnValueForMissingStub: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);
}

/// A class which mocks [UserDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDao extends _i1.Mock implements _i3.UserDao {
  @override
  _i2.AppDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeAppDatabase_35(
          this,
          Invocation.getter(#attachedDatabase),
        ),
        returnValueForMissingStub: _FakeAppDatabase_35(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i2.AppDatabase);

  @override
  _i11.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_21(
          this,
          Invocation.getter(#connection),
        ),
        returnValueForMissingStub: _FakeDatabaseConnection_21(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i11.DatabaseConnection);

  @override
  _i11.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i17.dummyValue<_i11.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
        returnValueForMissingStub: _i17.dummyValue<_i11.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i11.SqlTypes);

  @override
  _i11.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_18(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeDriftDatabaseOptions_18(
          this,
          Invocation.getter(#options),
        ),
      ) as _i11.DriftDatabaseOptions);

  @override
  _i11.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_22(
          this,
          Invocation.getter(#executor),
        ),
        returnValueForMissingStub: _FakeQueryExecutor_22(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i11.QueryExecutor);

  @override
  _i12.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_23(
          this,
          Invocation.getter(#streamQueries),
        ),
        returnValueForMissingStub: _FakeStreamQueryStore_23(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i12.StreamQueryStore);

  @override
  _i11.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_24(
          this,
          Invocation.getter(#resolvedEngine),
        ),
        returnValueForMissingStub: _FakeDatabaseConnectionUser_24(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i11.DatabaseConnectionUser);

  @override
  _i2.$UsersTable get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: _Fake$UsersTable_0(
          this,
          Invocation.getter(#users),
        ),
        returnValueForMissingStub: _Fake$UsersTable_0(
          this,
          Invocation.getter(#users),
        ),
      ) as _i2.$UsersTable);

  @override
  _i13.Future<List<_i2.User>> getAllUsers() => (super.noSuchMethod(
        Invocation.method(
          #getAllUsers,
          [],
        ),
        returnValue: _i13.Future<List<_i2.User>>.value(<_i2.User>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i2.User>>.value(<_i2.User>[]),
      ) as _i13.Future<List<_i2.User>>);

  @override
  _i13.Stream<List<_i2.User>> watchAllUsers() => (super.noSuchMethod(
        Invocation.method(
          #watchAllUsers,
          [],
        ),
        returnValue: _i13.Stream<List<_i2.User>>.empty(),
        returnValueForMissingStub: _i13.Stream<List<_i2.User>>.empty(),
      ) as _i13.Stream<List<_i2.User>>);

  @override
  _i13.Future<_i2.User?> getUserById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [id],
        ),
        returnValue: _i13.Future<_i2.User?>.value(),
        returnValueForMissingStub: _i13.Future<_i2.User?>.value(),
      ) as _i13.Future<_i2.User?>);

  @override
  _i13.Future<int> insertUser(_i11.Insertable<_i2.User>? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertUser,
          [user],
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<bool> updateUser(_i11.Insertable<_i2.User>? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i13.Future<bool>.value(false),
        returnValueForMissingStub: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<int> deleteUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [id],
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<_i2.User?> getUserByEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i13.Future<_i2.User?>.value(),
        returnValueForMissingStub: _i13.Future<_i2.User?>.value(),
      ) as _i13.Future<_i2.User?>);

  @override
  _i13.Future<int> updateFcmToken(
    String? id,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFcmToken,
          [
            id,
            token,
          ],
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Stream<T> createStream<T extends Object>(
          _i12.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i13.Stream<T>.empty(),
        returnValueForMissingStub: _i13.Stream<T>.empty(),
      ) as _i13.Stream<T>);

  @override
  T alias<T, D>(
    _i11.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i17.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
        returnValueForMissingStub: _i17.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(
          Iterable<_i11.TableInfo<_i11.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i11.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Stream<Set<_i11.TableUpdate>> tableUpdates(
          [_i11.TableUpdateQuery? query = const _i11.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i13.Stream<Set<_i11.TableUpdate>>.empty(),
        returnValueForMissingStub: _i13.Stream<Set<_i11.TableUpdate>>.empty(),
      ) as _i13.Stream<Set<_i11.TableUpdate>>);

  @override
  _i13.Future<T> doWhenOpened<T>(
          _i13.FutureOr<T> Function(_i11.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i11.InsertStatement<T, D> into<T extends _i11.Table, D>(
          _i11.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_27<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeInsertStatement_27<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i11.InsertStatement<T, D>);

  @override
  _i11.UpdateStatement<Tbl, R> update<Tbl extends _i11.Table, R>(
          _i11.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_28<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeUpdateStatement_28<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i11.UpdateStatement<Tbl, R>);

  @override
  _i11.SimpleSelectStatement<T, R> select<T extends _i11.HasResultSet, R>(
    _i11.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_29<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeSimpleSelectStatement_29<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i11.SimpleSelectStatement<T, R>);

  @override
  _i11.JoinedSelectStatement<T, R> selectOnly<T extends _i11.HasResultSet, R>(
    _i11.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_30<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeJoinedSelectStatement_30<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i11.JoinedSelectStatement<T, R>);

  @override
  _i11.BaseSelectStatement<_i11.TypedResult> selectExpressions(
          Iterable<_i11.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_31<_i11.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
        returnValueForMissingStub:
            _FakeBaseSelectStatement_31<_i11.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i11.BaseSelectStatement<_i11.TypedResult>);

  @override
  _i11.DeleteStatement<T, D> delete<T extends _i11.Table, D>(
          _i11.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_32<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeDeleteStatement_32<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i11.DeleteStatement<T, D>);

  @override
  _i13.Future<int> customUpdate(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i11.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<int> customInsert(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<List<_i11.QueryRow>> customWriteReturning(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i11.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i13.Future<List<_i11.QueryRow>>.value(<_i11.QueryRow>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i11.QueryRow>>.value(<_i11.QueryRow>[]),
      ) as _i13.Future<List<_i11.QueryRow>>);

  @override
  _i11.Selectable<_i11.QueryRow> customSelect(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i11.Selectable<_i11.QueryRow>);

  @override
  _i11.Selectable<_i11.QueryRow> customSelectQuery(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i11.Selectable<_i11.QueryRow>);

  @override
  _i13.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<T> transaction<T>(
    _i13.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i13.Future<T> exclusively<T>(_i13.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i13.Future<void> batch(
          _i13.FutureOr<void> Function(_i11.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<T> runWithInterceptor<T>(
    _i13.Future<T> Function()? action, {
    required _i11.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i11.GenerationContext $write(
    _i11.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i11.GenerationContext);

  @override
  _i11.GenerationContext $writeInsertable(
    _i11.TableInfo<_i11.Table, dynamic>? table,
    _i11.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i11.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
        returnValueForMissingStub: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i13.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);
}

/// A class which mocks [UserStatsDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserStatsDao extends _i1.Mock implements _i4.UserStatsDao {
  @override
  _i2.AppDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeAppDatabase_35(
          this,
          Invocation.getter(#attachedDatabase),
        ),
        returnValueForMissingStub: _FakeAppDatabase_35(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i2.AppDatabase);

  @override
  _i11.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_21(
          this,
          Invocation.getter(#connection),
        ),
        returnValueForMissingStub: _FakeDatabaseConnection_21(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i11.DatabaseConnection);

  @override
  _i11.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i17.dummyValue<_i11.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
        returnValueForMissingStub: _i17.dummyValue<_i11.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i11.SqlTypes);

  @override
  _i11.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_18(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeDriftDatabaseOptions_18(
          this,
          Invocation.getter(#options),
        ),
      ) as _i11.DriftDatabaseOptions);

  @override
  _i11.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_22(
          this,
          Invocation.getter(#executor),
        ),
        returnValueForMissingStub: _FakeQueryExecutor_22(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i11.QueryExecutor);

  @override
  _i12.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_23(
          this,
          Invocation.getter(#streamQueries),
        ),
        returnValueForMissingStub: _FakeStreamQueryStore_23(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i12.StreamQueryStore);

  @override
  _i11.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_24(
          this,
          Invocation.getter(#resolvedEngine),
        ),
        returnValueForMissingStub: _FakeDatabaseConnectionUser_24(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i11.DatabaseConnectionUser);

  @override
  _i2.$UserStatsTable get userStats => (super.noSuchMethod(
        Invocation.getter(#userStats),
        returnValue: _Fake$UserStatsTable_1(
          this,
          Invocation.getter(#userStats),
        ),
        returnValueForMissingStub: _Fake$UserStatsTable_1(
          this,
          Invocation.getter(#userStats),
        ),
      ) as _i2.$UserStatsTable);

  @override
  _i13.Future<void> insertOrUpdateUserStats(_i2.UserStatsCompanion? stats) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertOrUpdateUserStats,
          [stats],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<_i2.UserStat?> getUserStats(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserStats,
          [userId],
        ),
        returnValue: _i13.Future<_i2.UserStat?>.value(),
        returnValueForMissingStub: _i13.Future<_i2.UserStat?>.value(),
      ) as _i13.Future<_i2.UserStat?>);

  @override
  _i13.Future<void> deleteUserStats(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserStats,
          [userId],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Stream<T> createStream<T extends Object>(
          _i12.QueryStreamFetcher<T>? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i13.Stream<T>.empty(),
        returnValueForMissingStub: _i13.Stream<T>.empty(),
      ) as _i13.Stream<T>);

  @override
  T alias<T, D>(
    _i11.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i17.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
        returnValueForMissingStub: _i17.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(
          Iterable<_i11.TableInfo<_i11.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i11.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Stream<Set<_i11.TableUpdate>> tableUpdates(
          [_i11.TableUpdateQuery? query = const _i11.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i13.Stream<Set<_i11.TableUpdate>>.empty(),
        returnValueForMissingStub: _i13.Stream<Set<_i11.TableUpdate>>.empty(),
      ) as _i13.Stream<Set<_i11.TableUpdate>>);

  @override
  _i13.Future<T> doWhenOpened<T>(
          _i13.FutureOr<T> Function(_i11.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i11.InsertStatement<T, D> into<T extends _i11.Table, D>(
          _i11.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_27<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeInsertStatement_27<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i11.InsertStatement<T, D>);

  @override
  _i11.UpdateStatement<Tbl, R> update<Tbl extends _i11.Table, R>(
          _i11.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_28<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeUpdateStatement_28<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i11.UpdateStatement<Tbl, R>);

  @override
  _i11.SimpleSelectStatement<T, R> select<T extends _i11.HasResultSet, R>(
    _i11.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_29<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeSimpleSelectStatement_29<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i11.SimpleSelectStatement<T, R>);

  @override
  _i11.JoinedSelectStatement<T, R> selectOnly<T extends _i11.HasResultSet, R>(
    _i11.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_30<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeJoinedSelectStatement_30<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i11.JoinedSelectStatement<T, R>);

  @override
  _i11.BaseSelectStatement<_i11.TypedResult> selectExpressions(
          Iterable<_i11.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeBaseSelectStatement_31<_i11.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
        returnValueForMissingStub:
            _FakeBaseSelectStatement_31<_i11.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i11.BaseSelectStatement<_i11.TypedResult>);

  @override
  _i11.DeleteStatement<T, D> delete<T extends _i11.Table, D>(
          _i11.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_32<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeDeleteStatement_32<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i11.DeleteStatement<T, D>);

  @override
  _i13.Future<int> customUpdate(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i11.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<int> customInsert(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i13.Future<int>.value(0),
        returnValueForMissingStub: _i13.Future<int>.value(0),
      ) as _i13.Future<int>);

  @override
  _i13.Future<List<_i11.QueryRow>> customWriteReturning(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i11.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i13.Future<List<_i11.QueryRow>>.value(<_i11.QueryRow>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i11.QueryRow>>.value(<_i11.QueryRow>[]),
      ) as _i13.Future<List<_i11.QueryRow>>);

  @override
  _i11.Selectable<_i11.QueryRow> customSelect(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i11.Selectable<_i11.QueryRow>);

  @override
  _i11.Selectable<_i11.QueryRow> customSelectQuery(
    String? query, {
    List<_i11.Variable<Object>>? variables = const [],
    Set<_i11.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_33<_i11.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i11.Selectable<_i11.QueryRow>);

  @override
  _i13.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<T> transaction<T>(
    _i13.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i13.Future<T> exclusively<T>(_i13.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i13.Future<void> batch(
          _i13.FutureOr<void> Function(_i11.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<T> runWithInterceptor<T>(
    _i13.Future<T> Function()? action, {
    required _i11.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runWithInterceptor,
          [action],
          {#interceptor: interceptor},
        ),
        returnValue: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
        returnValueForMissingStub: _i17.ifNotNull(
              _i17.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runWithInterceptor,
                  [action],
                  {#interceptor: interceptor},
                ),
              ),
              (T v) => _i13.Future<T>.value(v),
            ) ??
            _FakeFuture_26<T>(
              this,
              Invocation.method(
                #runWithInterceptor,
                [action],
                {#interceptor: interceptor},
              ),
            ),
      ) as _i13.Future<T>);

  @override
  _i11.GenerationContext $write(
    _i11.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i11.GenerationContext);

  @override
  _i11.GenerationContext $writeInsertable(
    _i11.TableInfo<_i11.Table, dynamic>? table,
    _i11.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_34(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i11.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
        returnValueForMissingStub: _i17.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);

  @override
  _i13.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);
}

/// A class which mocks [ConnectivityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityProvider extends _i1.Mock
    implements _i18.ConnectivityProvider {
  @override
  bool get isOffline => (super.noSuchMethod(
        Invocation.getter(#isOffline),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeAppLifecycleState(_i19.AppLifecycleState? state) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeAppLifecycleState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<void> checkInternetAndServer() => (super.noSuchMethod(
        Invocation.method(
          #checkInternetAndServer,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  void addListener(_i19.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i19.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<bool> didPopRoute() => (super.noSuchMethod(
        Invocation.method(
          #didPopRoute,
          [],
        ),
        returnValue: _i13.Future<bool>.value(false),
        returnValueForMissingStub: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  bool handleStartBackGesture(_i20.PredictiveBackEvent? backEvent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleStartBackGesture,
          [backEvent],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void handleUpdateBackGestureProgress(_i20.PredictiveBackEvent? backEvent) =>
      super.noSuchMethod(
        Invocation.method(
          #handleUpdateBackGestureProgress,
          [backEvent],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleCommitBackGesture() => super.noSuchMethod(
        Invocation.method(
          #handleCommitBackGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleCancelBackGesture() => super.noSuchMethod(
        Invocation.method(
          #handleCancelBackGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<bool> didPushRoute(String? route) => (super.noSuchMethod(
        Invocation.method(
          #didPushRoute,
          [route],
        ),
        returnValue: _i13.Future<bool>.value(false),
        returnValueForMissingStub: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  _i13.Future<bool> didPushRouteInformation(
          _i21.RouteInformation? routeInformation) =>
      (super.noSuchMethod(
        Invocation.method(
          #didPushRouteInformation,
          [routeInformation],
        ),
        returnValue: _i13.Future<bool>.value(false),
        returnValueForMissingStub: _i13.Future<bool>.value(false),
      ) as _i13.Future<bool>);

  @override
  void didChangeMetrics() => super.noSuchMethod(
        Invocation.method(
          #didChangeMetrics,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTextScaleFactor() => super.noSuchMethod(
        Invocation.method(
          #didChangeTextScaleFactor,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangePlatformBrightness() => super.noSuchMethod(
        Invocation.method(
          #didChangePlatformBrightness,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeLocales(List<_i19.Locale>? locales) => super.noSuchMethod(
        Invocation.method(
          #didChangeLocales,
          [locales],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeViewFocus(_i19.ViewFocusEvent? event) => super.noSuchMethod(
        Invocation.method(
          #didChangeViewFocus,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i13.Future<_i19.AppExitResponse> didRequestAppExit() => (super.noSuchMethod(
        Invocation.method(
          #didRequestAppExit,
          [],
        ),
        returnValue:
            _i13.Future<_i19.AppExitResponse>.value(_i19.AppExitResponse.exit),
        returnValueForMissingStub:
            _i13.Future<_i19.AppExitResponse>.value(_i19.AppExitResponse.exit),
      ) as _i13.Future<_i19.AppExitResponse>);

  @override
  void didHaveMemoryPressure() => super.noSuchMethod(
        Invocation.method(
          #didHaveMemoryPressure,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeAccessibilityFeatures() => super.noSuchMethod(
        Invocation.method(
          #didChangeAccessibilityFeatures,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i22.UserRepository {
  @override
  _i2.AppDatabase get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeAppDatabase_35(
          this,
          Invocation.getter(#database),
        ),
        returnValueForMissingStub: _FakeAppDatabase_35(
          this,
          Invocation.getter(#database),
        ),
      ) as _i2.AppDatabase);

  @override
  _i14.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_36(
          this,
          Invocation.getter(#userService),
        ),
        returnValueForMissingStub: _FakeUserService_36(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i14.UserService);

  @override
  _i13.Future<_i15.User?> fetchUserLocal({String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserLocal,
          [],
          {#userId: userId},
        ),
        returnValue: _i13.Future<_i15.User?>.value(),
        returnValueForMissingStub: _i13.Future<_i15.User?>.value(),
      ) as _i13.Future<_i15.User?>);

  @override
  _i13.Future<void> storeUserLocal(_i15.User? user) => (super.noSuchMethod(
        Invocation.method(
          #storeUserLocal,
          [user],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<List<_i15.User>> fetchFriendsLocal(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFriendsLocal,
          [userId],
        ),
        returnValue: _i13.Future<List<_i15.User>>.value(<_i15.User>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i15.User>>.value(<_i15.User>[]),
      ) as _i13.Future<List<_i15.User>>);

  @override
  _i13.Future<Map<String, _i2.Friend>> getFriendsMap(String? currentUserId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendsMap,
          [currentUserId],
        ),
        returnValue:
            _i13.Future<Map<String, _i2.Friend>>.value(<String, _i2.Friend>{}),
        returnValueForMissingStub:
            _i13.Future<Map<String, _i2.Friend>>.value(<String, _i2.Friend>{}),
      ) as _i13.Future<Map<String, _i2.Friend>>);

  @override
  _i13.Future<_i15.User?> fetchUserRemote() => (super.noSuchMethod(
        Invocation.method(
          #fetchUserRemote,
          [],
        ),
        returnValue: _i13.Future<_i15.User?>.value(),
        returnValueForMissingStub: _i13.Future<_i15.User?>.value(),
      ) as _i13.Future<_i15.User?>);

  @override
  _i13.Future<_i15.User?> fetchUserProfileRemote(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserProfileRemote,
          [userId],
        ),
        returnValue: _i13.Future<_i15.User?>.value(),
        returnValueForMissingStub: _i13.Future<_i15.User?>.value(),
      ) as _i13.Future<_i15.User?>);

  @override
  _i13.Future<Map<String, dynamic>?> fetchUserStatsRemote({String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserStatsRemote,
          [],
          {#userId: userId},
        ),
        returnValue: _i13.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i13.Future<Map<String, dynamic>?>.value(),
      ) as _i13.Future<Map<String, dynamic>?>);

  @override
  _i13.Future<void> updateUserRemote({
    required String? firstName,
    required String? lastName,
    String? password,
    _i23.File? profilePicture,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserRemote,
          [],
          {
            #firstName: firstName,
            #lastName: lastName,
            #password: password,
            #profilePicture: profilePicture,
          },
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> updateUserPreferencesRemote({
    required List<String>? allergies,
    required Map<String, bool>? dietaryPreferences,
    required Map<String, bool>? notificationPreferences,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserPreferencesRemote,
          [],
          {
            #allergies: allergies,
            #dietaryPreferences: dietaryPreferences,
            #notificationPreferences: notificationPreferences,
          },
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> updateFcmTokenRemote(String? token) => (super.noSuchMethod(
        Invocation.method(
          #updateFcmTokenRemote,
          [token],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> deleteUserRemote() => (super.noSuchMethod(
        Invocation.method(
          #deleteUserRemote,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> storeFriendLocal(
    _i15.User? friend,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeFriendLocal,
          [
            friend,
            userId,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<_i15.User?> fetchFriendLocal(
    String? userId,
    String? friendId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFriendLocal,
          [
            userId,
            friendId,
          ],
        ),
        returnValue: _i13.Future<_i15.User?>.value(),
        returnValueForMissingStub: _i13.Future<_i15.User?>.value(),
      ) as _i13.Future<_i15.User?>);

  @override
  _i13.Future<void> updateFriendFromRemote(
    String? userId,
    String? friendId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFriendFromRemote,
          [
            userId,
            friendId,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> storeUserStatsLocal(
    String? userId,
    Map<String, dynamic>? stats,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeUserStatsLocal,
          [
            userId,
            stats,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<Map<String, dynamic>?> fetchUserStatsLocal(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserStatsLocal,
          [userId],
        ),
        returnValue: _i13.Future<Map<String, dynamic>?>.value(),
        returnValueForMissingStub: _i13.Future<Map<String, dynamic>?>.value(),
      ) as _i13.Future<Map<String, dynamic>?>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i14.UserService {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i17.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i13.Future<_i15.User> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i13.Future<_i15.User>.value(_FakeUser_37(
          this,
          Invocation.method(
            #getUserData,
            [],
          ),
        )),
        returnValueForMissingStub: _i13.Future<_i15.User>.value(_FakeUser_37(
          this,
          Invocation.method(
            #getUserData,
            [],
          ),
        )),
      ) as _i13.Future<_i15.User>);

  @override
  _i13.Future<Map<String, dynamic>> updateUser(
    String? firstName,
    String? lastName,
    String? password,
    _i23.File? profilePicture,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [
            firstName,
            lastName,
            password,
            profilePicture,
          ],
        ),
        returnValue:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i13.Future<Map<String, dynamic>>);

  @override
  _i13.Future<void> updateUserPreferences({
    required List<String>? allergies,
    required Map<String, bool>? dietaryPreferences,
    required Map<String, bool>? notificationPreferences,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserPreferences,
          [],
          {
            #allergies: allergies,
            #dietaryPreferences: dietaryPreferences,
            #notificationPreferences: notificationPreferences,
          },
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> updateFcmToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #updateFcmToken,
          [token],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> deleteUser() => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<_i15.User> getUserProfile(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i13.Future<_i15.User>.value(_FakeUser_37(
          this,
          Invocation.method(
            #getUserProfile,
            [userId],
          ),
        )),
        returnValueForMissingStub: _i13.Future<_i15.User>.value(_FakeUser_37(
          this,
          Invocation.method(
            #getUserProfile,
            [userId],
          ),
        )),
      ) as _i13.Future<_i15.User>);

  @override
  _i13.Future<Map<String, dynamic>> getUserStats({String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserStats,
          [],
          {#userId: userId},
        ),
        returnValue:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i13.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i13.Future<Map<String, dynamic>>);
}

/// A class which mocks [FriendService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFriendService extends _i1.Mock implements _i24.FriendService {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i17.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i13.Future<List<_i15.User>> getFriends() => (super.noSuchMethod(
        Invocation.method(
          #getFriends,
          [],
        ),
        returnValue: _i13.Future<List<_i15.User>>.value(<_i15.User>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i15.User>>.value(<_i15.User>[]),
      ) as _i13.Future<List<_i15.User>>);

  @override
  _i13.Future<List<_i25.FriendRequest>> getFriendRequests() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFriendRequests,
          [],
        ),
        returnValue:
            _i13.Future<List<_i25.FriendRequest>>.value(<_i25.FriendRequest>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i25.FriendRequest>>.value(<_i25.FriendRequest>[]),
      ) as _i13.Future<List<_i25.FriendRequest>>);

  @override
  _i13.Future<List<_i15.User>> searchUsers(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUsers,
          [query],
        ),
        returnValue: _i13.Future<List<_i15.User>>.value(<_i15.User>[]),
        returnValueForMissingStub:
            _i13.Future<List<_i15.User>>.value(<_i15.User>[]),
      ) as _i13.Future<List<_i15.User>>);

  @override
  _i13.Future<String?> sendFriendRequest(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #sendFriendRequest,
          [userId],
        ),
        returnValue: _i13.Future<String?>.value(),
        returnValueForMissingStub: _i13.Future<String?>.value(),
      ) as _i13.Future<String?>);

  @override
  _i13.Future<void> cancelSentRequest(String? requestId) => (super.noSuchMethod(
        Invocation.method(
          #cancelSentRequest,
          [requestId],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> respondToRequest(
    String? requestId,
    bool? accept,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #respondToRequest,
          [
            requestId,
            accept,
          ],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);

  @override
  _i13.Future<void> removeFriend(String? friendId) => (super.noSuchMethod(
        Invocation.method(
          #removeFriend,
          [friendId],
        ),
        returnValue: _i13.Future<void>.value(),
        returnValueForMissingStub: _i13.Future<void>.value(),
      ) as _i13.Future<void>);
}
