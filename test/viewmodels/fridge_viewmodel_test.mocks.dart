// Mocks generated by Mockito 5.4.6 from annotations
// in snapchef/test/viewmodels/fridge_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i10;

import 'package:flutter/material.dart' as _i13;
import 'package:flutter/services.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i18;
import 'package:snapchef/database/app_database.dart' as _i8;
import 'package:snapchef/models/ingredient.dart' as _i17;
import 'package:snapchef/providers/connectivity_provider.dart' as _i7;
import 'package:snapchef/providers/sync_actions/cookbook_sync_actions.dart'
    as _i4;
import 'package:snapchef/providers/sync_actions/fridge_sync_actions.dart'
    as _i2;
import 'package:snapchef/providers/sync_actions/grocery_sync_actions.dart'
    as _i3;
import 'package:snapchef/providers/sync_actions/notification_sync_actions.dart'
    as _i6;
import 'package:snapchef/providers/sync_actions/shared_recipe_sync_actions.dart'
    as _i5;
import 'package:snapchef/providers/sync_provider.dart' as _i14;
import 'package:snapchef/repositories/fridge_repository.dart' as _i16;
import 'package:snapchef/services/fridge_service.dart' as _i9;
import 'package:snapchef/services/sync_service.dart' as _i15;
import 'package:snapchef/viewmodels/ingredient_viewmodel.dart' as _i19;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFridgeSyncActions_0 extends _i1.SmartFake
    implements _i2.FridgeSyncActions {
  _FakeFridgeSyncActions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGrocerySyncActions_1 extends _i1.SmartFake
    implements _i3.GrocerySyncActions {
  _FakeGrocerySyncActions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCookbookSyncActions_2 extends _i1.SmartFake
    implements _i4.CookbookSyncActions {
  _FakeCookbookSyncActions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedRecipeSyncActions_3 extends _i1.SmartFake
    implements _i5.SharedRecipeSyncActions {
  _FakeSharedRecipeSyncActions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationSyncActions_4 extends _i1.SmartFake
    implements _i6.NotificationSyncActions {
  _FakeNotificationSyncActions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectivityProvider_5 extends _i1.SmartFake
    implements _i7.ConnectivityProvider {
  _FakeConnectivityProvider_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppDatabase_6 extends _i1.SmartFake implements _i8.AppDatabase {
  _FakeAppDatabase_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFridgeService_7 extends _i1.SmartFake implements _i9.FridgeService {
  _FakeFridgeService_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ConnectivityProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityProvider extends _i1.Mock
    implements _i7.ConnectivityProvider {
  @override
  bool get isOffline => (super.noSuchMethod(
        Invocation.getter(#isOffline),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeAppLifecycleState(_i10.AppLifecycleState? state) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeAppLifecycleState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> checkInternetAndServer() => (super.noSuchMethod(
        Invocation.method(
          #checkInternetAndServer,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<bool> didPopRoute() => (super.noSuchMethod(
        Invocation.method(
          #didPopRoute,
          [],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  bool handleStartBackGesture(_i12.PredictiveBackEvent? backEvent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleStartBackGesture,
          [backEvent],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void handleUpdateBackGestureProgress(_i12.PredictiveBackEvent? backEvent) =>
      super.noSuchMethod(
        Invocation.method(
          #handleUpdateBackGestureProgress,
          [backEvent],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleCommitBackGesture() => super.noSuchMethod(
        Invocation.method(
          #handleCommitBackGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleCancelBackGesture() => super.noSuchMethod(
        Invocation.method(
          #handleCancelBackGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<bool> didPushRoute(String? route) => (super.noSuchMethod(
        Invocation.method(
          #didPushRoute,
          [route],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> didPushRouteInformation(
          _i13.RouteInformation? routeInformation) =>
      (super.noSuchMethod(
        Invocation.method(
          #didPushRouteInformation,
          [routeInformation],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  void didChangeMetrics() => super.noSuchMethod(
        Invocation.method(
          #didChangeMetrics,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTextScaleFactor() => super.noSuchMethod(
        Invocation.method(
          #didChangeTextScaleFactor,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangePlatformBrightness() => super.noSuchMethod(
        Invocation.method(
          #didChangePlatformBrightness,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeLocales(List<_i10.Locale>? locales) => super.noSuchMethod(
        Invocation.method(
          #didChangeLocales,
          [locales],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeViewFocus(_i10.ViewFocusEvent? event) => super.noSuchMethod(
        Invocation.method(
          #didChangeViewFocus,
          [event],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<_i10.AppExitResponse> didRequestAppExit() => (super.noSuchMethod(
        Invocation.method(
          #didRequestAppExit,
          [],
        ),
        returnValue:
            _i11.Future<_i10.AppExitResponse>.value(_i10.AppExitResponse.exit),
        returnValueForMissingStub:
            _i11.Future<_i10.AppExitResponse>.value(_i10.AppExitResponse.exit),
      ) as _i11.Future<_i10.AppExitResponse>);

  @override
  void didHaveMemoryPressure() => super.noSuchMethod(
        Invocation.method(
          #didHaveMemoryPressure,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeAccessibilityFeatures() => super.noSuchMethod(
        Invocation.method(
          #didChangeAccessibilityFeatures,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SyncProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncProvider extends _i1.Mock implements _i14.SyncProvider {
  @override
  Map<String, List<Map<String, dynamic>>> get pendingActionQueues =>
      (super.noSuchMethod(
        Invocation.getter(#pendingActionQueues),
        returnValue: <String, List<Map<String, dynamic>>>{},
        returnValueForMissingStub: <String, List<Map<String, dynamic>>>{},
      ) as Map<String, List<Map<String, dynamic>>>);

  @override
  _i2.FridgeSyncActions get fridgeSyncActions => (super.noSuchMethod(
        Invocation.getter(#fridgeSyncActions),
        returnValue: _FakeFridgeSyncActions_0(
          this,
          Invocation.getter(#fridgeSyncActions),
        ),
        returnValueForMissingStub: _FakeFridgeSyncActions_0(
          this,
          Invocation.getter(#fridgeSyncActions),
        ),
      ) as _i2.FridgeSyncActions);

  @override
  _i3.GrocerySyncActions get grocerySyncActions => (super.noSuchMethod(
        Invocation.getter(#grocerySyncActions),
        returnValue: _FakeGrocerySyncActions_1(
          this,
          Invocation.getter(#grocerySyncActions),
        ),
        returnValueForMissingStub: _FakeGrocerySyncActions_1(
          this,
          Invocation.getter(#grocerySyncActions),
        ),
      ) as _i3.GrocerySyncActions);

  @override
  _i4.CookbookSyncActions get cookbookSyncActions => (super.noSuchMethod(
        Invocation.getter(#cookbookSyncActions),
        returnValue: _FakeCookbookSyncActions_2(
          this,
          Invocation.getter(#cookbookSyncActions),
        ),
        returnValueForMissingStub: _FakeCookbookSyncActions_2(
          this,
          Invocation.getter(#cookbookSyncActions),
        ),
      ) as _i4.CookbookSyncActions);

  @override
  _i5.SharedRecipeSyncActions get sharedRecipeSyncActions =>
      (super.noSuchMethod(
        Invocation.getter(#sharedRecipeSyncActions),
        returnValue: _FakeSharedRecipeSyncActions_3(
          this,
          Invocation.getter(#sharedRecipeSyncActions),
        ),
        returnValueForMissingStub: _FakeSharedRecipeSyncActions_3(
          this,
          Invocation.getter(#sharedRecipeSyncActions),
        ),
      ) as _i5.SharedRecipeSyncActions);

  @override
  _i6.NotificationSyncActions get notificationSyncActions =>
      (super.noSuchMethod(
        Invocation.getter(#notificationSyncActions),
        returnValue: _FakeNotificationSyncActions_4(
          this,
          Invocation.getter(#notificationSyncActions),
        ),
        returnValueForMissingStub: _FakeNotificationSyncActions_4(
          this,
          Invocation.getter(#notificationSyncActions),
        ),
      ) as _i6.NotificationSyncActions);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initSync(_i7.ConnectivityProvider? connectivityProvider) =>
      super.noSuchMethod(
        Invocation.method(
          #initSync,
          [connectivityProvider],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void disposeSync() => super.noSuchMethod(
        Invocation.method(
          #disposeSync,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<List<Map<String, dynamic>>> getPendingActions(String? queue) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingActions,
          [queue],
        ),
        returnValue: _i11.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub:
            _i11.Future<List<Map<String, dynamic>>>.value(
                <Map<String, dynamic>>[]),
      ) as _i11.Future<List<Map<String, dynamic>>>);

  @override
  void addPendingAction(
    String? queue,
    Map<String, dynamic>? action,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #addPendingAction,
          [
            queue,
            action,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearSyncQueue() => super.noSuchMethod(
        Invocation.method(
          #clearSyncQueue,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> handleSyncAction(
    String? queue,
    Map<String, dynamic>? action,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleSyncAction,
          [
            queue,
            action,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> syncPendingActions() => (super.noSuchMethod(
        Invocation.method(
          #syncPendingActions,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> savePendingActions() => (super.noSuchMethod(
        Invocation.method(
          #savePendingActions,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> loadPendingActions() => (super.noSuchMethod(
        Invocation.method(
          #loadPendingActions,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SyncManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockSyncManager extends _i1.Mock implements _i15.SyncManager {
  @override
  _i7.ConnectivityProvider get connectivityProvider => (super.noSuchMethod(
        Invocation.getter(#connectivityProvider),
        returnValue: _FakeConnectivityProvider_5(
          this,
          Invocation.getter(#connectivityProvider),
        ),
        returnValueForMissingStub: _FakeConnectivityProvider_5(
          this,
          Invocation.getter(#connectivityProvider),
        ),
      ) as _i7.ConnectivityProvider);

  @override
  void register(_i15.SyncCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #register,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregister(_i15.SyncCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #unregister,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<void> triggerSyncIfOnline() => (super.noSuchMethod(
        Invocation.method(
          #triggerSyncIfOnline,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FridgeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFridgeRepository extends _i1.Mock implements _i16.FridgeRepository {
  @override
  _i8.AppDatabase get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeAppDatabase_6(
          this,
          Invocation.getter(#database),
        ),
        returnValueForMissingStub: _FakeAppDatabase_6(
          this,
          Invocation.getter(#database),
        ),
      ) as _i8.AppDatabase);

  @override
  _i9.FridgeService get fridgeService => (super.noSuchMethod(
        Invocation.getter(#fridgeService),
        returnValue: _FakeFridgeService_7(
          this,
          Invocation.getter(#fridgeService),
        ),
        returnValueForMissingStub: _FakeFridgeService_7(
          this,
          Invocation.getter(#fridgeService),
        ),
      ) as _i9.FridgeService);

  @override
  _i11.Future<List<_i17.Ingredient>> fetchFridgeItemsRemote(String? fridgeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFridgeItemsRemote,
          [fridgeId],
        ),
        returnValue:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
        returnValueForMissingStub:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
      ) as _i11.Future<List<_i17.Ingredient>>);

  @override
  _i11.Future<List<_i17.Ingredient>> fetchFridgeItemsLocal(String? fridgeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFridgeItemsLocal,
          [fridgeId],
        ),
        returnValue:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
        returnValueForMissingStub:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
      ) as _i11.Future<List<_i17.Ingredient>>);

  @override
  _i11.Future<void> storeFridgeItemsLocal(
    String? fridgeId,
    List<_i17.Ingredient>? items,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeFridgeItemsLocal,
          [
            fridgeId,
            items,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> addOrUpdateFridgeItem(
    String? fridgeId,
    _i17.Ingredient? ingredient,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdateFridgeItem,
          [
            fridgeId,
            ingredient,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<bool> addFridgeItemRemote(
    String? fridgeId,
    _i17.Ingredient? ingredient,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFridgeItemRemote,
          [
            fridgeId,
            ingredient,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> updateFridgeItemRemote(
    String? fridgeId,
    String? itemId,
    int? newCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFridgeItemRemote,
          [
            fridgeId,
            itemId,
            newCount,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<void> deleteFridgeItemLocal(String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFridgeItemLocal,
          [itemId],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<bool> deleteFridgeItemRemote(
    String? fridgeId,
    String? itemId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFridgeItemRemote,
          [
            fridgeId,
            itemId,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<List<_i17.Ingredient>> fetchGroceriesRemote(String? fridgeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGroceriesRemote,
          [fridgeId],
        ),
        returnValue:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
        returnValueForMissingStub:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
      ) as _i11.Future<List<_i17.Ingredient>>);

  @override
  _i11.Future<List<_i17.Ingredient>> fetchGroceriesLocal(String? fridgeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGroceriesLocal,
          [fridgeId],
        ),
        returnValue:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
        returnValueForMissingStub:
            _i11.Future<List<_i17.Ingredient>>.value(<_i17.Ingredient>[]),
      ) as _i11.Future<List<_i17.Ingredient>>);

  @override
  _i11.Future<void> storeGroceriesLocal(
    String? fridgeId,
    List<_i17.Ingredient>? groceries,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeGroceriesLocal,
          [
            fridgeId,
            groceries,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> addOrUpdateGroceryItem(
    String? fridgeId,
    _i17.Ingredient? ingredient,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrUpdateGroceryItem,
          [
            fridgeId,
            ingredient,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<bool> addGroceryItemRemote(
    String? fridgeId,
    _i17.Ingredient? ingredient,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGroceryItemRemote,
          [
            fridgeId,
            ingredient,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> updateGroceryItemRemote(
    String? fridgeId,
    String? itemId,
    int? newCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroceryItemRemote,
          [
            fridgeId,
            itemId,
            newCount,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<void> deleteGroceryItemLocal(String? itemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroceryItemLocal,
          [itemId],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<bool> deleteGroceryItemRemote(
    String? fridgeId,
    String? itemId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroceryItemRemote,
          [
            fridgeId,
            itemId,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<void> saveFridgeOrder(
    String? fridgeId,
    List<String>? orderedIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFridgeOrder,
          [
            fridgeId,
            orderedIds,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> saveGroceriesOrder(
    String? fridgeId,
    List<String>? orderedIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroceriesOrder,
          [
            fridgeId,
            orderedIds,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateFridgeItemImageURL(
    String? fridgeId,
    String? itemId,
    String? imageUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFridgeItemImageURL,
          [
            fridgeId,
            itemId,
            imageUrl,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<void> updateGroceryItemImageURL(
    String? fridgeId,
    String? itemId,
    String? imageUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroceryItemImageURL,
          [
            fridgeId,
            itemId,
            imageUrl,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
}

/// A class which mocks [FridgeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFridgeService extends _i1.Mock implements _i9.FridgeService {
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i18.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
        returnValueForMissingStub: _i18.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i11.Future<List<dynamic>> fetchFridgeItems(String? fridgeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchFridgeItems,
          [fridgeId],
        ),
        returnValue: _i11.Future<List<dynamic>>.value(<dynamic>[]),
        returnValueForMissingStub:
            _i11.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i11.Future<List<dynamic>>);

  @override
  _i11.Future<bool> addFridgeItem(
    String? fridgeId,
    Map<String, dynamic>? itemData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFridgeItem,
          [
            fridgeId,
            itemData,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> updateFridgeItem(
    String? fridgeId,
    String? itemId,
    int? newCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFridgeItem,
          [
            fridgeId,
            itemId,
            newCount,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> updateFridgeItemImageURL(
    String? fridgeId,
    String? itemId,
    String? imageURL,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFridgeItemImageURL,
          [
            fridgeId,
            itemId,
            imageURL,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<void> saveFridgeOrder(
    String? fridgeId,
    List<String>? orderedIngredientIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFridgeOrder,
          [
            fridgeId,
            orderedIngredientIds,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<bool> deleteFridgeItem(
    String? fridgeId,
    String? itemId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteFridgeItem,
          [
            fridgeId,
            itemId,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<List<Map<String, dynamic>>> fetchGroceries(String? fridgeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchGroceries,
          [fridgeId],
        ),
        returnValue: _i11.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
        returnValueForMissingStub:
            _i11.Future<List<Map<String, dynamic>>>.value(
                <Map<String, dynamic>>[]),
      ) as _i11.Future<List<Map<String, dynamic>>>);

  @override
  _i11.Future<bool> addGroceryItem(
    String? fridgeId,
    Map<String, dynamic>? itemData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGroceryItem,
          [
            fridgeId,
            itemData,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> updateGroceryItem(
    String? fridgeId,
    String? itemId,
    int? newCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroceryItem,
          [
            fridgeId,
            itemId,
            newCount,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<bool> updateGroceryItemImageURL(
    String? fridgeId,
    String? itemId,
    String? imageURL,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateGroceryItemImageURL,
          [
            fridgeId,
            itemId,
            imageURL,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<void> saveGroceriesOrder(
    String? fridgeId,
    List<String>? orderedGroceriesIds,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveGroceriesOrder,
          [
            fridgeId,
            orderedGroceriesIds,
          ],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  _i11.Future<bool> deleteGroceryItem(
    String? fridgeId,
    String? itemId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteGroceryItem,
          [
            fridgeId,
            itemId,
          ],
        ),
        returnValue: _i11.Future<bool>.value(false),
        returnValueForMissingStub: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
}

/// A class which mocks [IngredientViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockIngredientViewModel extends _i1.Mock
    implements _i19.IngredientViewModel {
  @override
  List<_i17.Ingredient> get ingredients => (super.noSuchMethod(
        Invocation.getter(#ingredients),
        returnValue: <_i17.Ingredient>[],
        returnValueForMissingStub: <_i17.Ingredient>[],
      ) as List<_i17.Ingredient>);

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isLoggingOut => (super.noSuchMethod(
        Invocation.getter(#isLoggingOut),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i11.Future<void> fetchIngredients() => (super.noSuchMethod(
        Invocation.method(
          #fetchIngredients,
          [],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLoading(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setLoading,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setLoggingOut(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setLoggingOut,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setError(String? message) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearError() => super.noSuchMethod(
        Invocation.method(
          #clearError,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
